!function (e) { var t = {}; function r(n) { if (t[n]) return t[n].exports; var o = t[n] = { i: n, l: !1, exports: {} }; return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports } r.m = e, r.c = t, r.d = function (e, t, n) { r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n }) }, r.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, r.t = function (e, t) { if (1 & t && (e = r(e)), 8 & t) return e; if (4 & t && "object" == typeof e && e && e.__esModule) return e; var n = Object.create(null); if (r.r(n), Object.defineProperty(n, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var o in e) r.d(n, o, function (t) { return e[t] }.bind(null, o)); return n }, r.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return r.d(t, "a", t), t }, r.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, r.p = "/bundles/ashideproductprices/", r(r.s = "PsaX") }({ NvCP: function (e, t) { e.exports = '{% block sw_product_detail_attribute_sets %}\n    {% parent() %}\n    {# TODO: add a card for the customergroups #}\n    <sw-card :title="$t(\'sw-product.detail.customerGroupCardLabel\')"\n             :isLoading="isLoading">\n        {# TODO: add an \'entity-many-to-many\' select for the customergroups, which is wrapped in an \'inherit-wrapper\' https://component-library.shopware.com/components/sw-inherit-wrapper #}\n        <sw-inherit-wrapper v-if="!isLoading"\n                            v-model="product.extensions.customergroups"\n                            :inheritedValue="parentProduct.extensions ? parentProduct.extensions.customergroups : null"\n                            :hasParent="!!parentProduct.id"\n                            :label="$t(\'sw-product.detail.customerGroupSelectLabel\')"\n                            isAssociation\n                            @inheritance-remove="saveProduct"\n                            @inheritance-restore="saveProduct">\n            <template #content="{ currentValue, isInherited, updateCurrentValue }">\n                <sw-entity-many-to-many-select {# https://component-library.shopware.com/components/sw-entity-many-to-many-select #}\n                    :localMode="product.isNew()"\n                    :entityCollection="currentValue"\n                    @input="updateCurrentValue"\n                    labelProperty="name"\n                    :disabled="isInherited"\n                    :key="isInherited"\n                    :placeholder="$t(\'sw-product.detail.customerGroupSelectPlaceholder\')">\n                </sw-entity-many-to-many-select>\n            </template>\n        </sw-inherit-wrapper>\n    </sw-card>\n{% endblock %}' }, PsaX: function (e, t, r) { "use strict"; r.r(t); r("dK0M"); var n = r("NvCP"), o = r.n(n); Shopware.Component.override("sw-product-detail-base", { template: o.a, computed: { productRepository: function () { return this.repositoryFactory.create("product") } }, methods: { saveProduct: function () { this.product && this.productRepository.save(this.product, Shopware.Context.api) } } }) }, dK0M: function (e, t) { Shopware.Component.override("sw-product-detail", { computed: { productCriteria: function () { var e = this.$super("productCriteria"); return e.addAssociation("customergroups"), e } } }) } });
//# sourceMappingURL=a-s-hide-product-prices.js.map